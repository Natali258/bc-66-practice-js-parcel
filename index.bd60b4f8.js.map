{"mappings":"AAAA,IAAIA,EAAW,OACf,IAAyBC,KAkBT,QAjBdC,QAAQC,IAAI,eAEL,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACMC,KAAKC,SAAW,IAM7BJ,EAAQ,CAAC,QAAS,oBAEpBC,EAAO,GAAGL,cAAiB,GAC1B,IAAK,KAKTS,MAAK,EAAET,EAAMU,MACZT,QAAQC,IAAIF,EAAMU,GAClBX,EAAWC,EACJA,KAERS,MAAKE,IACJV,QAAQC,IAAIS,EAAK,IAElBC,OAAMC,IACLZ,QAAQC,IAAIW,EAAM,IAEnBC,SAAQ,KACPb,QAAQC,IAAI,YAAY,IAE5BD,QAAQC,IAAIH","sources":["src/js/promise.js"],"sourcesContent":["let userName = 'Poly';\nfunction fetchUserByName(name) {\n  console.log('start fetch');\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const isDone = Math.random() < 0.5;\n      if (isDone) {\n        const user = {\n          name,\n          email: 'mango@gmail.com',\n        };\n        resolve(['Mango', 'mango@gmail.com']);\n      }\n      reject(`${name} not found`);\n    }, 1000);\n  });\n}\n\nfetchUserByName('Mango')\n  .then(([name, email]) => {\n    console.log(name, email);\n    userName = name;\n    return name;\n  })\n  .then(data => {\n    console.log(data);\n  })\n  .catch(error => {\n    console.log(error);\n  })\n  .finally(() => {\n    console.log('end fetch');\n  });\nconsole.log(userName);\n"],"names":["$6ae7f9047be29c20$var$userName","name","console","log","Promise","resolve","reject","setTimeout","Math","random","then","email","data","catch","error","finally"],"version":3,"file":"index.bd60b4f8.js.map"}