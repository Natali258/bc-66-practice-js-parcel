{"mappings":"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","sources":["<anon>","node_modules/notiflix/build/notiflix-notify-aio.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iQIUW\", function(module, exports) {\n/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.6\n* Author: Furkan (https://github.com/furcan)\n* Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/ /* global define */ (function(root, factory) {\n    if (typeof define === \"function\" && define.amd) define([], function() {\n        return factory(root);\n    });\n    else if (typeof module.exports === \"object\") module.exports = factory(root);\n    else root.Notiflix = factory(root);\n})(typeof $parcel$global !== \"undefined\" ? $parcel$global : typeof window !== \"undefined\" ? window : module.exports, function(window1) {\n    \"use strict\";\n    // COMMON: SSR check: begin\n    if (typeof window1 === \"undefined\" && typeof window1.document === \"undefined\") return false;\n    // COMMON: SSR check: end\n    // COMMON: Variables: begin\n    var notiflixNamespace = \"Notiflix\";\n    var notiflixConsoleDocs = \"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\";\n    var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n    // COMMON: Variables: end\n    // NOTIFY: Default Settings: begin\n    var typesNotify = {\n        Success: \"Success\",\n        Failure: \"Failure\",\n        Warning: \"Warning\",\n        Info: \"Info\"\n    };\n    var newNotifySettings;\n    var notifySettings = {\n        wrapID: \"NotiflixNotifyWrap\",\n        overlayID: \"NotiflixNotifyOverlay\",\n        width: \"280px\",\n        position: \"right-top\",\n        distance: \"10px\",\n        opacity: 1,\n        borderRadius: \"5px\",\n        rtl: false,\n        timeout: 3000,\n        messageMaxLength: 110,\n        backOverlay: false,\n        backOverlayColor: \"rgba(0,0,0,0.5)\",\n        plainText: true,\n        showOnlyTheLastOne: false,\n        clickToClose: false,\n        pauseOnHover: true,\n        ID: \"NotiflixNotify\",\n        className: \"notiflix-notify\",\n        zindex: 4001,\n        fontFamily: \"Quicksand\",\n        fontSize: \"13px\",\n        cssAnimation: true,\n        cssAnimationDuration: 400,\n        cssAnimationStyle: \"fade\",\n        closeButton: false,\n        useIcon: true,\n        useFontAwesome: false,\n        fontAwesomeIconStyle: \"basic\",\n        fontAwesomeIconSize: \"34px\",\n        success: {\n            background: \"#32c682\",\n            textColor: \"#fff\",\n            childClassName: \"notiflix-notify-success\",\n            notiflixIconColor: \"rgba(0,0,0,0.2)\",\n            fontAwesomeClassName: \"fas fa-check-circle\",\n            fontAwesomeIconColor: \"rgba(0,0,0,0.2)\",\n            backOverlayColor: \"rgba(50,198,130,0.2)\"\n        },\n        failure: {\n            background: \"#ff5549\",\n            textColor: \"#fff\",\n            childClassName: \"notiflix-notify-failure\",\n            notiflixIconColor: \"rgba(0,0,0,0.2)\",\n            fontAwesomeClassName: \"fas fa-times-circle\",\n            fontAwesomeIconColor: \"rgba(0,0,0,0.2)\",\n            backOverlayColor: \"rgba(255,85,73,0.2)\"\n        },\n        warning: {\n            background: \"#eebf31\",\n            textColor: \"#fff\",\n            childClassName: \"notiflix-notify-warning\",\n            notiflixIconColor: \"rgba(0,0,0,0.2)\",\n            fontAwesomeClassName: \"fas fa-exclamation-circle\",\n            fontAwesomeIconColor: \"rgba(0,0,0,0.2)\",\n            backOverlayColor: \"rgba(238,191,49,0.2)\"\n        },\n        info: {\n            background: \"#26c0d3\",\n            textColor: \"#fff\",\n            childClassName: \"notiflix-notify-info\",\n            notiflixIconColor: \"rgba(0,0,0,0.2)\",\n            fontAwesomeClassName: \"fas fa-info-circle\",\n            fontAwesomeIconColor: \"rgba(0,0,0,0.2)\",\n            backOverlayColor: \"rgba(38,192,211,0.2)\"\n        }\n    };\n    // NOTIFY: Default Settings: end\n    // COMMON: Console Error: begin\n    var commonConsoleError = function(message) {\n        return console.error(\"%c \" + notiflixNamespace + \" Error \", \"padding:2px;border-radius:20px;color:#fff;background:#ff5549\", \"\\n\" + message + notiflixConsoleDocs);\n    };\n    // COMMON: Console Error: end\n    // COMMON: Check Head or Body: begin\n    var commonCheckHeadOrBody = function(element) {\n        if (!element) element = \"head\";\n        if (window1.document[element] === null) {\n            commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n            return false;\n        }\n        return true;\n    };\n    // COMMON: Check Head or Body: end\n    // COMMON: Set Internal CSS Codes: begin\n    var commonSetInternalCSSCodes = function(getInternalCSSCodes, styleElementId) {\n        // check doc head\n        if (!commonCheckHeadOrBody(\"head\")) return false;\n        // internal css\n        if (getInternalCSSCodes() !== null && !window1.document.getElementById(styleElementId)) {\n            var internalCSS = window1.document.createElement(\"style\");\n            internalCSS.id = styleElementId;\n            internalCSS.innerHTML = getInternalCSSCodes();\n            window1.document.head.appendChild(internalCSS);\n        }\n    };\n    // COMMON: Set Internal CSS Codes: end\n    // COMMON: Extend Options: begin\n    var commonExtendOptions = function() {\n        // variables\n        var extended = {};\n        var deep = false;\n        var i = 0;\n        // check if a deep merge\n        if (Object.prototype.toString.call(arguments[0]) === \"[object Boolean]\") {\n            deep = arguments[0];\n            i++;\n        }\n        // merge the object into the extended object\n        var merge = function(obj) {\n            for(var prop in obj)if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // if property is an object, merge properties\n                if (deep && Object.prototype.toString.call(obj[prop]) === \"[object Object]\") extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n                else extended[prop] = obj[prop];\n            }\n        };\n        // loop through each object and conduct a merge\n        for(; i < arguments.length; i++)merge(arguments[i]);\n        return extended;\n    };\n    // COMMON: Extend Options: end\n    // COMMON: Get Plaintext: begin\n    var commonGetPlaintext = function(html) {\n        var htmlPool = window1.document.createElement(\"div\");\n        htmlPool.innerHTML = html;\n        return htmlPool.textContent || htmlPool.innerText || \"\";\n    };\n    // COMMON: Get Plaintext: end\n    // NOTIFY: Get Internal CSS Codes: begin\n    var notifyGetInternalCSSCodes = function() {\n        var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\n        return notifyCSS || null;\n    };\n    // NOTIFY: Get Internal CSS Codes: end\n    // NOTIFY: Create: begin\n    var notifyCreateCounter = 0;\n    var notifyCreate = function(notifyType, message, callbackOrOptions, options) {\n        // check doc body\n        if (!commonCheckHeadOrBody(\"body\")) return false;\n        // if not initialized pretend like init\n        if (!newNotifySettings) Notiflix.Notify.init({});\n        // create a backup for new settings\n        var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\n        // check callbackOrOptions and options: begin\n        if (typeof callbackOrOptions === \"object\" && !Array.isArray(callbackOrOptions) || typeof options === \"object\" && !Array.isArray(options)) {\n            // new options\n            var newOptions = {};\n            if (typeof callbackOrOptions === \"object\") newOptions = callbackOrOptions;\n            else if (typeof options === \"object\") newOptions = options;\n            // extend new settings with the new options\n            newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\n        }\n        // check callbackOrOptions and options: end\n        // notify type\n        var theType = newNotifySettings[notifyType.toLocaleLowerCase(\"en\")];\n        // notify counter\n        notifyCreateCounter++;\n        // check the message: begin\n        if (typeof message !== \"string\") message = \"Notiflix \" + notifyType;\n        // check the message: end\n        // if plainText is true => HTML tags not allowed: begin\n        if (newNotifySettings.plainText) message = commonGetPlaintext(message); // message plain text\n        // if plainText is true => HTML tags not allowed: end\n        // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\n        if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\n            // extend settings for error massege\n            newNotifySettings = commonExtendOptions(true, newNotifySettings, {\n                closeButton: true,\n                messageMaxLength: 150\n            });\n            // error message\n            message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\n        }\n        // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\n        // check message max length: begin\n        if (message.length > newNotifySettings.messageMaxLength) message = message.substring(0, newNotifySettings.messageMaxLength) + \"...\";\n        // check message max length: end\n        // font awesome icon style: begin\n        if (newNotifySettings.fontAwesomeIconStyle === \"shadow\") theType.fontAwesomeIconColor = theType.background;\n        // font awesome icon style: end\n        // if cssAnimaion is false => duration: begin\n        if (!newNotifySettings.cssAnimation) newNotifySettings.cssAnimationDuration = 0;\n        // if cssAnimaion is false => duration: end\n        // notify wrap: begin\n        var ntflxNotifyWrap = window1.document.getElementById(notifySettings.wrapID) || window1.document.createElement(\"div\");\n        ntflxNotifyWrap.id = notifySettings.wrapID;\n        ntflxNotifyWrap.style.width = newNotifySettings.width;\n        ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\n        ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\n        // wrap position: begin\n        if (newNotifySettings.position === \"center-center\") {\n            ntflxNotifyWrap.style.left = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = newNotifySettings.distance;\n            ntflxNotifyWrap.style.right = newNotifySettings.distance;\n            ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n            ntflxNotifyWrap.style.margin = \"auto\";\n            ntflxNotifyWrap.classList.add(\"nx-flex-center-center\");\n            ntflxNotifyWrap.style.maxHeight = \"calc((100vh - \" + newNotifySettings.distance + \") - \" + newNotifySettings.distance + \")\";\n            ntflxNotifyWrap.style.display = \"flex\";\n            ntflxNotifyWrap.style.flexWrap = \"wrap\";\n            ntflxNotifyWrap.style.flexDirection = \"column\";\n            ntflxNotifyWrap.style.justifyContent = \"center\";\n            ntflxNotifyWrap.style.alignItems = \"center\";\n            ntflxNotifyWrap.style.pointerEvents = \"none\";\n        } else if (newNotifySettings.position === \"center-top\") {\n            ntflxNotifyWrap.style.left = newNotifySettings.distance;\n            ntflxNotifyWrap.style.right = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = newNotifySettings.distance;\n            ntflxNotifyWrap.style.bottom = \"auto\";\n            ntflxNotifyWrap.style.margin = \"auto\";\n        } else if (newNotifySettings.position === \"center-bottom\") {\n            ntflxNotifyWrap.style.left = newNotifySettings.distance;\n            ntflxNotifyWrap.style.right = newNotifySettings.distance;\n            ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = \"auto\";\n            ntflxNotifyWrap.style.margin = \"auto\";\n        } else if (newNotifySettings.position === \"right-bottom\") {\n            ntflxNotifyWrap.style.right = newNotifySettings.distance;\n            ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = \"auto\";\n            ntflxNotifyWrap.style.left = \"auto\";\n        } else if (newNotifySettings.position === \"left-top\") {\n            ntflxNotifyWrap.style.left = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = newNotifySettings.distance;\n            ntflxNotifyWrap.style.right = \"auto\";\n            ntflxNotifyWrap.style.bottom = \"auto\";\n        } else if (newNotifySettings.position === \"left-bottom\") {\n            ntflxNotifyWrap.style.left = newNotifySettings.distance;\n            ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = \"auto\";\n            ntflxNotifyWrap.style.right = \"auto\";\n        } else {\n            ntflxNotifyWrap.style.right = newNotifySettings.distance;\n            ntflxNotifyWrap.style.top = newNotifySettings.distance;\n            ntflxNotifyWrap.style.left = \"auto\";\n            ntflxNotifyWrap.style.bottom = \"auto\";\n        }\n        // wrap position: end\n        // if background overlay is true: begin\n        if (newNotifySettings.backOverlay) {\n            var ntflxNotifyOverlay = window1.document.getElementById(notifySettings.overlayID) || window1.document.createElement(\"div\");\n            ntflxNotifyOverlay.id = notifySettings.overlayID;\n            ntflxNotifyOverlay.style.width = \"100%\";\n            ntflxNotifyOverlay.style.height = \"100%\";\n            ntflxNotifyOverlay.style.position = \"fixed\";\n            ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\n            ntflxNotifyOverlay.style.left = 0;\n            ntflxNotifyOverlay.style.top = 0;\n            ntflxNotifyOverlay.style.right = 0;\n            ntflxNotifyOverlay.style.bottom = 0;\n            ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\n            ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? \"nx-with-animation\" : \"\";\n            ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + \"ms\" : \"\";\n            if (!window1.document.getElementById(notifySettings.overlayID)) window1.document.body.appendChild(ntflxNotifyOverlay);\n        }\n        // if background overlay is true: end\n        if (!window1.document.getElementById(notifySettings.wrapID)) window1.document.body.appendChild(ntflxNotifyWrap);\n        // notify wrap: end\n        // notify content: begin\n        var ntflxNotify = window1.document.createElement(\"div\");\n        ntflxNotify.id = newNotifySettings.ID + \"-\" + notifyCreateCounter;\n        ntflxNotify.className = newNotifySettings.className + \" \" + theType.childClassName + \" \" + (newNotifySettings.cssAnimation ? \"nx-with-animation\" : \"\") + \" \" + (newNotifySettings.useIcon ? \"nx-with-icon\" : \"\") + \" nx-\" + newNotifySettings.cssAnimationStyle + \" \" + (newNotifySettings.closeButton && typeof callbackOrOptions !== \"function\" ? \"nx-with-close-button\" : \"\") + \" \" + (typeof callbackOrOptions === \"function\" ? \"nx-with-callback\" : \"\") + \" \" + (newNotifySettings.clickToClose ? \"nx-notify-click-to-close\" : \"\");\n        ntflxNotify.style.fontSize = newNotifySettings.fontSize;\n        ntflxNotify.style.color = theType.textColor;\n        ntflxNotify.style.background = theType.background;\n        ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\n        ntflxNotify.style.pointerEvents = \"all\";\n        // rtl: begin\n        if (newNotifySettings.rtl) {\n            ntflxNotify.setAttribute(\"dir\", \"rtl\");\n            ntflxNotify.classList.add(\"nx-rtl-on\");\n        }\n        // rtl: end\n        // font-family: begin\n        ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\n        // font-family: end\n        // use css animation: begin\n        if (newNotifySettings.cssAnimation) ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + \"ms\";\n        // use css animation: end\n        // close button element: begin\n        var closeButtonHTML = \"\";\n        if (newNotifySettings.closeButton && typeof callbackOrOptions !== \"function\") closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\n        // close buttpon element: end\n        // use icon: begin\n        if (newNotifySettings.useIcon) {\n            // use font awesome\n            if (newNotifySettings.useFontAwesome) ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + \"; font-size:\" + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + \" \" + (newNotifySettings.fontAwesomeIconStyle === \"shadow\" ? \"nx-message-icon-fa-shadow\" : \"nx-message-icon-fa-basic\") + '\"></i><span class=\"nx-message nx-with-icon\">' + message + \"</span>\" + (newNotifySettings.closeButton ? closeButtonHTML : \"\");\n            else {\n                var svgIcon = \"\";\n                if (notifyType === typesNotify.Success) svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\n                else if (notifyType === typesNotify.Failure) svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\n                else if (notifyType === typesNotify.Warning) svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\n                else if (notifyType === typesNotify.Info) svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\n                ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + \"</span>\" + (newNotifySettings.closeButton ? closeButtonHTML : \"\");\n            }\n        } else ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + \"</span>\" + (newNotifySettings.closeButton ? closeButtonHTML : \"\");\n        // use icon: end\n        // notify content: end\n        // notify append or prepend: begin\n        if (newNotifySettings.position === \"left-bottom\" || newNotifySettings.position === \"right-bottom\") {\n            var notifyWrap = window1.document.getElementById(notifySettings.wrapID);\n            notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\n        } else window1.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\n        // notify append or prepend: end\n        // remove by timeout or click: begin\n        var eachNotifyElement = window1.document.getElementById(ntflxNotify.id);\n        if (eachNotifyElement) {\n            // timeout variables\n            var timeoutHide;\n            var timeoutRemove;\n            // hide notify elm and hide overlay: begin\n            var hideNotifyElementsAndOverlay = function() {\n                eachNotifyElement.classList.add(\"nx-remove\");\n                var removeOverlay = window1.document.getElementById(notifySettings.overlayID);\n                if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) removeOverlay.classList.add(\"nx-remove\");\n                clearTimeout(timeoutHide);\n            };\n            // hide notify elm and hide overlay: end\n            // remove notify elm and wrapper: begin\n            var removeNotifyElmentsAndWrapper = function() {\n                if (eachNotifyElement && eachNotifyElement.parentNode !== null) eachNotifyElement.parentNode.removeChild(eachNotifyElement);\n                if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) {\n                    ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\n                    var removeOverlay = window1.document.getElementById(notifySettings.overlayID);\n                    if (removeOverlay && removeOverlay.parentNode !== null) removeOverlay.parentNode.removeChild(removeOverlay);\n                }\n                clearTimeout(timeoutRemove);\n            };\n            // remove notify elm and wrapper: end\n            // if has close button and callbackOrOptions is not a function: begin\n            if (newNotifySettings.closeButton && typeof callbackOrOptions !== \"function\") {\n                var closeButtonElm = window1.document.getElementById(ntflxNotify.id).querySelector(\"span.nx-close-button\");\n                closeButtonElm.addEventListener(\"click\", function() {\n                    hideNotifyElementsAndOverlay();\n                    var clickToCloseTimeout = setTimeout(function() {\n                        removeNotifyElmentsAndWrapper();\n                        clearTimeout(clickToCloseTimeout);\n                    }, newNotifySettings.cssAnimationDuration);\n                });\n            }\n            // if has close button and callbackOrOptions is not a function: end\n            // if callbackOrOptions or click to close: begin\n            if (typeof callbackOrOptions === \"function\" || newNotifySettings.clickToClose) eachNotifyElement.addEventListener(\"click\", function() {\n                if (typeof callbackOrOptions === \"function\") callbackOrOptions();\n                hideNotifyElementsAndOverlay();\n                var callbackTimeout = setTimeout(function() {\n                    removeNotifyElmentsAndWrapper();\n                    clearTimeout(callbackTimeout);\n                }, newNotifySettings.cssAnimationDuration);\n            });\n            // if callbackOrOptions or click to close: end\n            // else auto remove: begin\n            if (!newNotifySettings.closeButton && typeof callbackOrOptions !== \"function\") {\n                // auto remove: begin\n                var autoRemove = function() {\n                    timeoutHide = setTimeout(function() {\n                        hideNotifyElementsAndOverlay();\n                    }, newNotifySettings.timeout);\n                    timeoutRemove = setTimeout(function() {\n                        removeNotifyElmentsAndWrapper();\n                    }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\n                };\n                autoRemove();\n                // auto remove: end\n                // pause auto remove: begin\n                if (newNotifySettings.pauseOnHover) {\n                    eachNotifyElement.addEventListener(\"mouseenter\", function() {\n                        eachNotifyElement.classList.add(\"nx-paused\");\n                        clearTimeout(timeoutHide);\n                        clearTimeout(timeoutRemove);\n                    });\n                    eachNotifyElement.addEventListener(\"mouseleave\", function() {\n                        eachNotifyElement.classList.remove(\"nx-paused\");\n                        autoRemove();\n                    });\n                }\n            // pause auto remove: end\n            }\n        // else auto remove: end\n        }\n        // remove by timeout or click: end\n        // notify - show only the last one: begin\n        if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\n            var allNotifyElmNotTheLastOne = window1.document.querySelectorAll(\"[id^=\" + newNotifySettings.ID + \"-]:not([id=\" + newNotifySettings.ID + \"-\" + notifyCreateCounter + \"])\");\n            for(var i = 0; i < allNotifyElmNotTheLastOne.length; i++){\n                var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\n                if (eachNotifyElmNotLastOne.parentNode !== null) eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\n            }\n        }\n        // notify - show only the last one: end\n        // extend new settings with the backup settings\n        newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\n    };\n    // NOTIFY: Create: end\n    var Notiflix = {\n        Notify: {\n            // Init\n            init: function(userNotifyOptions) {\n                // extend options\n                newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\n                // internal css if exist\n                commonSetInternalCSSCodes(notifyGetInternalCSSCodes, \"NotiflixNotifyInternalCSS\");\n            },\n            // Merge First Init\n            merge: function(userNotifyExtendOptions) {\n                // if initialized already\n                if (newNotifySettings) newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\n                else {\n                    commonConsoleError(\"You have to initialize the Notify module before call Merge function.\");\n                    return false;\n                }\n            },\n            // Success\n            success: function(message, callbackOrOptions, options) {\n                notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\n            },\n            // Failure\n            failure: function(message, callbackOrOptions, options) {\n                notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\n            },\n            // Warning\n            warning: function(message, callbackOrOptions, options) {\n                notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\n            },\n            // Info\n            info: function(message, callbackOrOptions, options) {\n                notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\n            }\n        }\n    };\n    if (typeof window1.Notiflix === \"object\") return commonExtendOptions(true, window1.Notiflix, {\n        Notify: Notiflix.Notify\n    });\n    else return {\n        Notify: Notiflix.Notify\n    };\n});\n\n});\n\n\n//# sourceMappingURL=gallery.02050ffd.js.map\n","/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.6\n* Author: Furkan (https://github.com/furcan)\n* Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\n    return false;\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\n    Success: 'Success',\n    Failure: 'Failure',\n    Warning: 'Warning',\n    Info: 'Info',\n  };\n  var newNotifySettings;\n  var notifySettings = {\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\n    width: '280px',\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n    distance: '10px',\n    opacity: 1,\n    borderRadius: '5px',\n    rtl: false,\n    timeout: 3000,\n    messageMaxLength: 110,\n    backOverlay: false,\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n    plainText: true,\n    showOnlyTheLastOne: false,\n    clickToClose: false,\n    pauseOnHover: true,\n\n    ID: 'NotiflixNotify',\n    className: 'notiflix-notify',\n    zindex: 4001,\n    fontFamily: 'Quicksand',\n    fontSize: '13px',\n    cssAnimation: true,\n    cssAnimationDuration: 400,\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n    closeButton: false,\n    useIcon: true,\n    useFontAwesome: false,\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\n    fontAwesomeIconSize: '34px',\n\n    success: {\n      background: '#32c682',\n      textColor: '#fff',\n      childClassName: 'notiflix-notify-success',\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\n      fontAwesomeClassName: 'fas fa-check-circle',\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n      backOverlayColor: 'rgba(50,198,130,0.2)',\n    },\n\n    failure: {\n      background: '#ff5549',\n      textColor: '#fff',\n      childClassName: 'notiflix-notify-failure',\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\n      fontAwesomeClassName: 'fas fa-times-circle',\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n      backOverlayColor: 'rgba(255,85,73,0.2)',\n    },\n\n    warning: {\n      background: '#eebf31',\n      textColor: '#fff',\n      childClassName: 'notiflix-notify-warning',\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n      backOverlayColor: 'rgba(238,191,49,0.2)',\n    },\n\n    info: {\n      background: '#26c0d3',\n      textColor: '#fff',\n      childClassName: 'notiflix-notify-info',\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\n      fontAwesomeClassName: 'fas fa-info-circle',\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n      backOverlayColor: 'rgba(38,192,211,0.2)',\n    },\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\n    if (!element) { element = 'head'; }\n    if (window.document[element] === null) {\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n      return false;\n    }\n    return true;\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\n    // check doc head\n    if (!commonCheckHeadOrBody('head')) { return false; }\n\n    // internal css\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\n      var internalCSS = window.document.createElement('style');\n      internalCSS.id = styleElementId;\n      internalCSS.innerHTML = getInternalCSSCodes();\n      window.document.head.appendChild(internalCSS);\n    }\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\n    // variables\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    // check if a deep merge\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    }\n    // merge the object into the extended object\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // if property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    };\n    // loop through each object and conduct a merge\n    for (; i < arguments.length; i++) {\n      merge(arguments[i]);\n    }\n    return extended;\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\n    var htmlPool = window.document.createElement('div');\n    htmlPool.innerHTML = html;\n    return htmlPool.textContent || htmlPool.innerText || '';\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\n    return notifyCSS || null;\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\n    // check doc body\n    if (!commonCheckHeadOrBody('body')) { return false; }\n\n    // if not initialized pretend like init\n    if (!newNotifySettings) {\n      Notiflix.Notify.init({});\n    }\n\n    // create a backup for new settings\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\n\n    // check callbackOrOptions and options: begin\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\n      // new options\n      var newOptions = {};\n      if (typeof callbackOrOptions === 'object') {\n        newOptions = callbackOrOptions;\n      } else if (typeof options === 'object') {\n        newOptions = options;\n      }\n\n      // extend new settings with the new options\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\n    }\n    // check callbackOrOptions and options: end\n\n    // notify type\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\n\n    // notify counter\n    notifyCreateCounter++;\n\n    // check the message: begin\n    if (typeof message !== 'string') {\n      message = 'Notiflix ' + notifyType;\n    }\n    // check the message: end\n\n    // if plainText is true => HTML tags not allowed: begin\n    if (newNotifySettings.plainText) {\n      message = commonGetPlaintext(message); // message plain text\n    }\n    // if plainText is true => HTML tags not allowed: end\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\n      // extend settings for error massege\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\n      // error message\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\n    }\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\n\n    // check message max length: begin\n    if (message.length > newNotifySettings.messageMaxLength) {\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\n    }\n    // check message max length: end\n\n    // font awesome icon style: begin\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\n      theType.fontAwesomeIconColor = theType.background;\n    }\n    // font awesome icon style: end\n\n    // if cssAnimaion is false => duration: begin\n    if (!newNotifySettings.cssAnimation) {\n      newNotifySettings.cssAnimationDuration = 0;\n    }\n    // if cssAnimaion is false => duration: end\n\n    // notify wrap: begin\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\n    ntflxNotifyWrap.id = notifySettings.wrapID;\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\n\n    // wrap position: begin\n    if (newNotifySettings.position === 'center-center') {\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n      ntflxNotifyWrap.style.margin = 'auto';\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\n      ntflxNotifyWrap.style.display = 'flex';\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\n      ntflxNotifyWrap.style.flexDirection = 'column';\n      ntflxNotifyWrap.style.justifyContent = 'center';\n      ntflxNotifyWrap.style.alignItems = 'center';\n      ntflxNotifyWrap.style.pointerEvents = 'none';\n    } else if (newNotifySettings.position === 'center-top') {\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\n      ntflxNotifyWrap.style.bottom = 'auto';\n      ntflxNotifyWrap.style.margin = 'auto';\n    } else if (newNotifySettings.position === 'center-bottom') {\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = 'auto';\n      ntflxNotifyWrap.style.margin = 'auto';\n    } else if (newNotifySettings.position === 'right-bottom') {\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = 'auto';\n      ntflxNotifyWrap.style.left = 'auto';\n    } else if (newNotifySettings.position === 'left-top') {\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\n      ntflxNotifyWrap.style.right = 'auto';\n      ntflxNotifyWrap.style.bottom = 'auto';\n    } else if (newNotifySettings.position === 'left-bottom') {\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = 'auto';\n      ntflxNotifyWrap.style.right = 'auto';\n    } else { // 'right-top' or else\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\n      ntflxNotifyWrap.style.left = 'auto';\n      ntflxNotifyWrap.style.bottom = 'auto';\n    }\n    // wrap position: end\n\n    // if background overlay is true: begin\n    if (newNotifySettings.backOverlay) {\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\n      ntflxNotifyOverlay.style.width = '100%';\n      ntflxNotifyOverlay.style.height = '100%';\n      ntflxNotifyOverlay.style.position = 'fixed';\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\n      ntflxNotifyOverlay.style.left = 0;\n      ntflxNotifyOverlay.style.top = 0;\n      ntflxNotifyOverlay.style.right = 0;\n      ntflxNotifyOverlay.style.bottom = 0;\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\n        window.document.body.appendChild(ntflxNotifyOverlay);\n      }\n    }\n    // if background overlay is true: end\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\n      window.document.body.appendChild(ntflxNotifyWrap);\n    }\n    // notify wrap: end\n\n    // notify content: begin\n    var ntflxNotify = window.document.createElement('div');\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\n    ntflxNotify.style.color = theType.textColor;\n    ntflxNotify.style.background = theType.background;\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\n    ntflxNotify.style.pointerEvents = 'all';\n\n    // rtl: begin\n    if (newNotifySettings.rtl) {\n      ntflxNotify.setAttribute('dir', 'rtl');\n      ntflxNotify.classList.add('nx-rtl-on');\n    }\n    // rtl: end\n\n    // font-family: begin\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\n    // font-family: end\n\n    // use css animation: begin\n    if (newNotifySettings.cssAnimation) {\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\n    }\n    // use css animation: end\n\n    // close button element: begin\n    var closeButtonHTML = '';\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\n    }\n    // close buttpon element: end\n\n    // use icon: begin\n    if (newNotifySettings.useIcon) {\n      // use font awesome\n      if (newNotifySettings.useFontAwesome) {\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\n      }\n      // use notiflix icon\n      else {\n        var svgIcon = '';\n        if (notifyType === typesNotify.Success) {  // success\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\n        } else if (notifyType === typesNotify.Failure) { // failure\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\n        } else if (notifyType === typesNotify.Warning) { // warning\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\n        } else if (notifyType === typesNotify.Info) { // info\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\n        }\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\n      }\n    }\n    // without icon\n    else {\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\n    }\n    // use icon: end\n    // notify content: end\n\n    // notify append or prepend: begin\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\n    } else {\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\n    }\n    // notify append or prepend: end\n\n    // remove by timeout or click: begin\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\n    if (eachNotifyElement) {\n      // timeout variables\n      var timeoutHide;\n      var timeoutRemove;\n\n      // hide notify elm and hide overlay: begin\n      var hideNotifyElementsAndOverlay = function () {\n        eachNotifyElement.classList.add('nx-remove');\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\n          removeOverlay.classList.add('nx-remove');\n        }\n        clearTimeout(timeoutHide);\n      };\n      // hide notify elm and hide overlay: end\n\n      // remove notify elm and wrapper: begin\n      var removeNotifyElmentsAndWrapper = function () {\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\n        }\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\n          if (removeOverlay && removeOverlay.parentNode !== null) {\n            removeOverlay.parentNode.removeChild(removeOverlay);\n          }\n        }\n        clearTimeout(timeoutRemove);\n      };\n      // remove notify elm and wrapper: end\n\n      // if has close button and callbackOrOptions is not a function: begin\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\n        closeButtonElm.addEventListener('click', function () {\n          hideNotifyElementsAndOverlay();\n          var clickToCloseTimeout = setTimeout(function () {\n            removeNotifyElmentsAndWrapper();\n            clearTimeout(clickToCloseTimeout);\n          }, newNotifySettings.cssAnimationDuration);\n        });\n      }\n      // if has close button and callbackOrOptions is not a function: end\n\n      // if callbackOrOptions or click to close: begin\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\n        eachNotifyElement.addEventListener('click', function () {\n          if (typeof callbackOrOptions === 'function') {\n            callbackOrOptions();\n          }\n          hideNotifyElementsAndOverlay();\n          var callbackTimeout = setTimeout(function () {\n            removeNotifyElmentsAndWrapper();\n            clearTimeout(callbackTimeout);\n          }, newNotifySettings.cssAnimationDuration);\n        });\n      }\n      // if callbackOrOptions or click to close: end\n\n      // else auto remove: begin\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\n        // auto remove: begin\n        var autoRemove = function () {\n          timeoutHide = setTimeout(function () {\n            hideNotifyElementsAndOverlay();\n          }, newNotifySettings.timeout);\n          timeoutRemove = setTimeout(function () {\n            removeNotifyElmentsAndWrapper();\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\n        };\n        autoRemove();\n        // auto remove: end\n\n        // pause auto remove: begin\n        if (newNotifySettings.pauseOnHover) {\n          eachNotifyElement.addEventListener('mouseenter', function () {\n            eachNotifyElement.classList.add('nx-paused');\n            clearTimeout(timeoutHide);\n            clearTimeout(timeoutRemove);\n          });\n          eachNotifyElement.addEventListener('mouseleave', function () {\n            eachNotifyElement.classList.remove('nx-paused');\n            autoRemove();\n          });\n        }\n        // pause auto remove: end\n      }\n      // else auto remove: end\n    }\n    // remove by timeout or click: end\n\n    // notify - show only the last one: begin\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\n        }\n      }\n    }\n    // notify - show only the last one: end\n\n    // extend new settings with the backup settings\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\n      // Init\n      init: function (userNotifyOptions) {\n        // extend options\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\n        // internal css if exist\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\n      },\n      // Merge First Init\n      merge: function (userNotifyExtendOptions) {\n        // if initialized already\n        if (newNotifySettings) {\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\n        }\n        // initialize first\n        else {\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\n          return false;\n        }\n      },\n      // Success\n      success: function (message, callbackOrOptions, options) {\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\n      },\n      // Failure\n      failure: function (message, callbackOrOptions, options) {\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\n      },\n      // Warning\n      warning: function (message, callbackOrOptions, options) {\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\n      },\n      // Info\n      info: function (message, callbackOrOptions, options) {\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\n      },\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","root","factory","window1","document","newNotifySettings","typesNotify","Success","Failure","Warning","Info","notifySettings","wrapID","overlayID","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonSetInternalCSSCodes","getInternalCSSCodes","styleElementId","getElementById","internalCSS","createElement","innerHTML","head","appendChild","commonExtendOptions","extended","deep","i","Object","prototype","toString","arguments","length","merge","obj","prop","hasOwnProperty","commonGetPlaintext","html","htmlPool","textContent","innerText","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","options","Notiflix","Notify","newNotifySettingsBackup","Array","isArray","newOptions","theType","toLocaleLowerCase","substring","ntflxNotifyWrap","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","ntflxNotifyOverlay","height","animationDuration","body","ntflxNotify","color","setAttribute","closeButtonHTML","svgIcon","notifyWrap","insertBefore","firstChild","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","childElementCount","clearTimeout","removeNotifyElmentsAndWrapper","parentNode","removeChild","closeButtonElm","querySelector","addEventListener","clickToCloseTimeout","setTimeout","callbackTimeout","autoRemove","remove","allNotifyElmNotTheLastOne","querySelectorAll","eachNotifyElmNotLastOne","userNotifyOptions","userNotifyExtendOptions","define","amd"],"version":3,"file":"gallery.02050ffd.js.map"}