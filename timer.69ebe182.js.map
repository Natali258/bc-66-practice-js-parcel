{"mappings":"CAAc,CACZA,WAAY,KACZC,KAAM,GACNC,cAAe,CACbC,KAAM,CAAC,OAAY,MAAU,QAClBC,MAAJ,CAAC,SAAgB,SAAgB,SACvBC,QAAR,CAAC,UAAkB,UAAkB,UAC1BC,QAAX,CAAC,UAAkB,UAAkB,WAGlCC,MAAMC,EAAcC,GAClB,MAAMC,EAAS,IAAIC,KAAKF,GACxB,IAAIG,EAAQF,EAASC,KAAKE,MACtBD,GAAS,EACXE,MAAM,0BAGRC,KAAKC,QAAQR,GAEbO,KAAKf,WAAaiB,aAAY,KAE5B,GADAL,EAAQF,EAASC,KAAKE,MAClBD,GAAS,EAGX,OAFAE,MAAM,wBACNI,cAAcH,KAAKf,YAGrB,MAAMmB,EAAOJ,KAAKK,UAAUR,GAC5BG,KAAKM,kBAAkBF,EAAK,GAC3B,K,EAELH,QAAQR,GACNO,KAAKd,KAAKqB,MAAQC,SAASC,cAAc,IAAIhB,I,EAE/CY,UAAUK,IAKD,C,KAJMC,KAAKC,MAAMF,EAAO,IAAO,GAAK,GAAK,I,MAClCC,KAAKC,MAAMF,EAAO,IAAO,GAAK,IAAM,G,QAClCC,KAAKC,MAAMF,EAAO,IAAO,IAAM,G,QAC/BC,KAAKC,MAAMF,EAAO,KAAQ,KAG5CJ,kBAAkBF,GAChBS,OAAOC,QAAQV,GAAMW,SAAQ,EAAEC,EAAKC,GAAQC,KAC1ClB,KAAKd,KAAKqB,MAAMY,SAASD,GAAOE,YAAcpB,KAAKqB,eAAeJ,GAClEjB,KAAKd,KAAKqB,MAAMY,SAASD,GAAOI,QAAQC,MAAQvB,KAAKwB,gBACnDP,EACAD,EACD,G,EAGLK,eAAeJ,GACNQ,OAAOR,GAAOS,SAAS,EAAG,GAGnCF,gBAAgBP,EAAOD,GACrB,OAAOhB,KAAKb,cAAc6B,GACxBC,EAAQ,IAAM,GAAKA,EAAQ,IAAM,GAC7B,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAQ,GAAK,EAAIA,EAAQ,GAAK,G,IAKrDzB,MAAM,eAAgB","sources":["src/js/timer.js"],"sourcesContent":["const timer = {\n  intervalId: null,\n  refs: {},\n  datasetValues: {\n    days: ['день', 'дня', 'днів'],\n    hours: ['година', 'години', 'годин'],\n    minutes: ['хвилина', 'хвилини', 'хвилин'],\n    seconds: ['секунда', 'секунди', 'секунд'],\n  },\n\n  start(rootSelector, targetDate) {\n    const target = new Date(targetDate);\n    let delta = target - Date.now();\n    if (delta <= 0) {\n      alert('Select date in future');\n      return;\n    }\n    this.getRefs(rootSelector);\n\n    this.intervalId = setInterval(() => {\n      delta = target - Date.now();\n      if (delta <= 0) {\n        alert('Success dedline');\n        clearInterval(this.intervalId);\n        return;\n      }\n      const date = this.convertMS(delta);\n      this.updateTextContent(date);\n    }, 1000);\n  },\n  getRefs(rootSelector) {\n    this.refs.timer = document.querySelector(`.${rootSelector}`);\n  },\n  convertMS(diff) {\n    const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n    const hours = Math.floor(diff / 1000 / 60 / 60) % 24;\n    const minutes = Math.floor(diff / 1000 / 60) % 60;\n    const seconds = Math.floor(diff / 1000) % 60;\n    return { days, hours, minutes, seconds };\n  },\n  updateTextContent(date) {\n    Object.entries(date).forEach(([key, value], index) => {\n      this.refs.timer.children[index].textContent = this.addLeadingZero(value);\n      this.refs.timer.children[index].dataset.title = this.updateDataTitle(\n        value,\n        key\n      );\n    });\n  },\n  addLeadingZero(value) {\n    return String(value).padStart(2, 0);\n  },\n\n  updateDataTitle(value, key) {\n    return this.datasetValues[key][\n      value % 100 > 4 && value % 100 < 20\n        ? 2\n        : [2, 0, 1, 1, 1, 2][value % 10 < 5 ? value % 10 : 5]\n    ];\n  },\n};\n\ntimer.start('timer__items', '2023-12-14');\n"],"names":["intervalId","refs","datasetValues","days","hours","minutes","seconds","start","rootSelector","targetDate","target","Date","delta","now","alert","this","getRefs","setInterval","clearInterval","date","convertMS","updateTextContent","timer","document","querySelector","diff","Math","floor","Object","entries","forEach","key","value","index","children","textContent","addLeadingZero","dataset","title","updateDataTitle","String","padStart"],"version":3,"file":"timer.69ebe182.js.map"}